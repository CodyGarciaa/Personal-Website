/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations, Html } from '@react-three/drei'
import { useSpring, animated } from '@react-spring/three'

export default function DL_Card(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/final_models/DLfinal.glb')
  const { actions, names } = useAnimations(animations, group)

  const helper = () => {
    console.log('clicked wallet')
    // actions[names[0]].fadeIn(0.5).play()
    actions['WalletOpenAnimation'].setLoop(THREE.LoopOnce, 1);
    actions['WalletOpenAnimation'].clampWhenFinished = true; // Stop at the last frame
    actions['WalletOpenAnimation'].fadeIn(0.5).play()
  }
  const {dl_position} = useSpring({
    from: { dl_position: [-7.081, 0.626, -1.709]},
    to: [{dl_position: [-7.081, 8, -1.709]},
         {dl_position: [-7.081, 0.626, -1.709]}],
    config: {
        mass: 5,
        tension: 200,
        friction: 50,
    },
    // loop: true,
    immediate: true,
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" onClick={helper}>
        <animated.group
          name="ArmatureWallet"
          position={dl_position}
          rotation={[0, 0, -Math.PI / 2]}>
          <skinnedMesh
            name="DL_Card"
            geometry={nodes.DL_Card.geometry}
            material={materials.DL_Material}
            skeleton={nodes.DL_Card.skeleton}
          />
          <primitive object={nodes.walletstay} />
          <primitive object={nodes.walletspine}>
            <primitive object={nodes.walletopen}>
              <Html>
                
              </Html>
            </primitive>
          </primitive>

        </animated.group>
      </group>
    </group>
  )
}

useGLTF.preload('/final_models/DLfinal.glb')