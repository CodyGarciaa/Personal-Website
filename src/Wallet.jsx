

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Wallet({ onWalletClick, isOpened, ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/final_models/walletfinal.glb')
  const { actions } = useAnimations(animations, group)
  // const [isOpened, setIsOpened] = useState(false)

  materials.Sleeve_Material.transparent = true;
  materials.Sleeve_Material.opacity = 0.5;

  // useEffect(() => {
  //   actions['WalletOpenAnimation'].setLoop(THREE.LoopOnce, 1);
  //   actions['WalletOpenAnimation'].clampWhenFinished = true;
  //   actions['WalletOpenAnimation'].fadeIn(0.5).play()
  // }, [])

  useEffect( () => {
    console.log('clicked wallet')
    
    if(!isOpened) {
        actions['SleeveCloseAnimation'].fadeOut(0.5)
        actions['SleeveOpenAnimation'].reset()
        actions['SleeveOpenAnimation'].setLoop(THREE.LoopOnce, 1);
        actions['SleeveOpenAnimation'].clampWhenFinished = true;
        actions['SleeveOpenAnimation'].fadeIn(0.5).play()
        console.log('opening wallet')
    } else {
        actions['SleeveOpenAnimation'].fadeOut(0.5)
        actions['SleeveCloseAnimation'].reset()
        actions['SleeveCloseAnimation'].setLoop(THREE.LoopOnce, 1);
        actions['SleeveCloseAnimation'].clampWhenFinished = true;
        actions['SleeveCloseAnimation'].fadeIn(0.5).play()
        console.log('closing wallet')
    }
  }, [isOpened])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="ArmatureSleeve" position={[-0.01, 0, -0.758]}>
          <skinnedMesh
            name="Sleeve"
            geometry={nodes.Sleeve.geometry}
            material={materials.Sleeve_Material}
            skeleton={nodes.Sleeve.skeleton}
            onClick={onWalletClick}
          />
          <primitive object={nodes.firstfold} />
          <primitive object={nodes.firstsleeve} />
        </group>
        <group
          name="ArmatureWallet"
          position={[-7.081, 0.626, -1.709]}
          rotation={[0, 0, -Math.PI / 2]}>
          <group name="Wallet">
            <skinnedMesh
              name="Cube"
              geometry={nodes.Cube.geometry}
              material={materials.Wallet_Material}
              skeleton={nodes.Cube.skeleton}
            />
            <skinnedMesh
              name="Cube_1"
              geometry={nodes.Cube_1.geometry}
              material={materials.Sleeve_Material}
              skeleton={nodes.Cube_1.skeleton}
            />
          </group>
          <primitive object={nodes.walletstay} />
          <primitive object={nodes.walletspine} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/final_models/walletfinal.glb')