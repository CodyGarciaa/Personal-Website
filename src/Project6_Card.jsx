

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations, Html } from '@react-three/drei'
import Project_Card_Face from './Project_Card_Face'
import { useFrame } from '@react-three/fiber'
import { useSpring, animated } from '@react-spring/three'

export default function Project6_Card({isOpened, ...props}) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/final_models/Proj6final.glb')
  const { actions } = useAnimations(animations, group)
  const isFirstRender = useRef(true);

  useEffect( () => {
    if (isFirstRender.current) {
      console.log('first render');
      isFirstRender.current = false; // Skip the first render
      return;
    } else {
      console.log('clicked wallet')
    
      if(isOpened) {
          actions['SleeveCloseAnimation'].fadeOut(0.5)
          actions['SleeveOpenAnimation'].reset()
          actions['SleeveOpenAnimation'].setLoop(THREE.LoopOnce, 1);
          actions['SleeveOpenAnimation'].clampWhenFinished = true;
          actions['SleeveOpenAnimation'].fadeIn(0.5).play()
          console.log('opening wallet')
      } else {
          actions['SleeveOpenAnimation'].fadeOut(0.5)
          actions['SleeveCloseAnimation'].reset()
          actions['SleeveCloseAnimation'].setLoop(THREE.LoopOnce, 1);
          actions['SleeveCloseAnimation'].clampWhenFinished = true;
          actions['SleeveCloseAnimation'].fadeIn(0.5).play()
          console.log('closing wallet')
      }
    }
  }, [isOpened])


  const [clicked, toggleClick] = useState(false);

  const testSpring = useSpring({
    pos: clicked ? [5, 5, 5] : [-0.01, 0, -0.758] 
  })


  const helper = () => {
    // console.log('clicked 6');
    // toggleClick(!clicked);
  }

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" onClick={helper}>
        <animated.group name="ArmatureSleeve" position={testSpring.pos}>
          <skinnedMesh
            name="Proj6Card"
            geometry={nodes.Proj6Card.geometry}
            material={materials.Project_Material}
            skeleton={nodes.Proj6Card.skeleton}
          />
          <primitive object={nodes.firstfold}>
            <primitive object={nodes.secondsleeve}>
              <primitive object={nodes.secondfold}>
                <primitive object={nodes.thirdsleeve}>
                  <primitive object={nodes.thirdfold}>
                    <primitive object={nodes.fourthsleeve}>
                      <primitive object={nodes.fourthfold}>
                        <primitive object={nodes.fifthsleeve}>
                          <primitive object={nodes.fifthfold}>
                            <primitive object={nodes.sixthsleeve}>
                              <Html
                                occlude="blending"
                                wrapperClass="nodes"
                                position={[4.08, 2.69, 0.22]}
                                transform
                                distanceFactor={8.1}
                                rotation-y={THREE.MathUtils.degToRad(179.6)}
                                rotation-x={THREE.MathUtils.degToRad(180)}
                                style={{ pointerEvents: 'none' }}
                              >
                                <Project_Card_Face number={6} />
                              </Html>
                            </primitive>
                          </primitive>
                        </primitive>
                      </primitive>
                    </primitive>
                  </primitive>
                </primitive>
              </primitive>
            </primitive>
          </primitive>
          <primitive object={nodes.firstsleeve} />
        </animated.group>
      </group>
    </group>
  )
}

useGLTF.preload('/final_models/Proj6final.glb')