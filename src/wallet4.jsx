import * as THREE from 'three'
import React, { useRef } from 'react'
import { Html, useGLTF, useAnimations } from '@react-three/drei'
import DL_bio from './DL_Face'
import { useFrame } from '@react-three/fiber'

export default function Wallet4(props) {
  const group = useRef()
  const dlCardRef = useRef()
  const { nodes, materials, animations } = useGLTF('/wallettestmask.glb')
  const { actions, names } = useAnimations(animations, group)

  // Trigger animations
  const helper = () => {
    console.log('clicked wallet')
    actions[names[0]].fadeIn(0.5).play()
    actions[names[1]].fadeIn(0.5).play()
  }

  useFrame(() => {
    if (dlCardRef.current) {
      // Applying an additional transformation on top of the animation
      dlCardRef.current.position.y += 0.01 // Move the card up over time
      dlCardRef.current.rotation.z += 0.01 // Rotate the card around the Z-axis over time
    }
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" onClick={helper}>
        <group name="ArmatureSleeve" position={[-0.01, 0, -0.758]}>
          <skinnedMesh
            name="Proj1Card"
            geometry={nodes.Proj1Card.geometry}
            material={materials.Project_Material}
            skeleton={nodes.Proj1Card.skeleton}
          />
          {/* Other cards */}
          <skinnedMesh
            name="Sleeve"
            geometry={nodes.Sleeve.geometry}
            material={materials.Sleeve_Material}
            skeleton={nodes.Sleeve.skeleton}
          />
          <primitive object={nodes.firstfold} />
          <primitive object={nodes.firstsleeve} />
        </group>
        <group
          name="ArmatureWallet"
          position={[-7.081, 0.626, -1.709]}
          rotation={[0, 0, -Math.PI / 2]}>
          <skinnedMesh
            name="BuisCard"
            geometry={nodes.BuisCard.geometry}
            material={materials.Buisness_Material}
            skeleton={nodes.BuisCard.skeleton}
          />
          <skinnedMesh
            name="DL_Card"
            ref={dlCardRef} // Attach the ref here to access it
            position={[0, 4, 0]} // Initial position (can still be adjusted)
            geometry={nodes.DL_Card.geometry}
            material={materials.DL_Material}
            skeleton={nodes.DL_Card.skeleton}
          />
          <skinnedMesh
            name="DL_Face"
            geometry={nodes.DL_Face.geometry}
            material={materials.DL_Material}
            skeleton={nodes.DL_Face.skeleton}
          />
          <group name="Wallet">
            <skinnedMesh
              name="Cube"
              geometry={nodes.Cube.geometry}
              material={materials.Wallet_Material}
              skeleton={nodes.Cube.skeleton}
            />
            <skinnedMesh
              name="Cube_1"
              geometry={nodes.Cube_1.geometry}
              material={materials.Sleeve_Material}
              skeleton={nodes.Cube_1.skeleton}
            />
          </group>
          <primitive object={nodes.walletstay} />
          <primitive object={nodes.walletspine}>
            <primitive object={nodes.walletopen}>
              <Html
                occlude
                wrapperClass="nodes"
                position={[2.4, 7, 0.7]}
                transform
                distanceFactor={8}
                rotation-z={THREE.MathUtils.degToRad(-90)}
                style={{ pointerEvents: 'none' }}
              >
                <DL_bio />
              </Html>
            </primitive>
          </primitive>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/wallettestmask.glb')



// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import * as THREE from 'three'
// import React, { useRef } from 'react'
// import { Html, useGLTF, useAnimations  } from '@react-three/drei'
// import DL_bio from './DL_bio'
// import { useFrame } from '@react-three/fiber';
// import { useSpring, animated } from '@react-spring/three';

// export default function Wallet4( props) {
//   const group = useRef();
//   const dlCardRef = useRef();
//   const dlHtmlRef = useRef();
//   const { nodes, materials, animations } = useGLTF('/wallettestmask.glb');
//   const { actions, names } = useAnimations(animations, group);

//   const { position } = useSpring({
//     position: [2, 2, 0], // Target position for the DL_Card
//     config: { mass: 1, tension: 170, friction: 26 },
//   });

//   const helper = ()  => {
//     console.log('clicked wallet');
//     actions[names[0]].fadeIn(0.5).play();
//     actions[names[1]].fadeIn(0.5).play();
//   };

//   useFrame(() => {
//     if (dlCardRef.current && dlHtmlRef.current) {
//       // Get the current world position of the DL_Card mesh
//       const worldPosition = new THREE.Vector3();
//       dlCardRef.current.getWorldPosition(worldPosition);

//       // Get the current world rotation of the DL_Card mesh
//     //   const worldRotation = new THREE.Euler();
//     //   dlCardRef.current.getWorldQuaternion(new THREE.Quaternion()).toEuler(worldRotation);

//       // Update the Html position and rotation based on DL_Card
//       dlHtmlRef.current.position = worldPosition;
//     //   dlHtmlRef.current.rotation.copy(worldRotation);
//     }
//   });

//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Scene" onClick={helper}>
//         <group name="ArmatureSleeve" position={[-0.01, 0, -0.758]}>
//           <skinnedMesh
//             name="Proj1Card"
//             geometry={nodes.Proj1Card.geometry}
//             material={materials.Project_Material}
//             skeleton={nodes.Proj1Card.skeleton}
//           />
//           <skinnedMesh
//             name="Proj2Card"
//             geometry={nodes.Proj2Card.geometry}
//             material={materials.Project_Material}
//             skeleton={nodes.Proj2Card.skeleton}
//           />
//           <skinnedMesh
//             name="Proj3Card"
//             geometry={nodes.Proj3Card.geometry}
//             material={materials.Project_Material}
//             skeleton={nodes.Proj3Card.skeleton}
//           />
//           <skinnedMesh
//             name="Proj4Card"
//             geometry={nodes.Proj4Card.geometry}
//             material={materials.Project_Material}
//             skeleton={nodes.Proj4Card.skeleton}
//           />
//           <skinnedMesh
//             name="Proj5Card"
//             geometry={nodes.Proj5Card.geometry}
//             material={materials.Project_Material}
//             skeleton={nodes.Proj5Card.skeleton}
//           />
//           <skinnedMesh
//             name="Sleeve"
//             geometry={nodes.Sleeve.geometry}
//             material={materials.Sleeve_Material}
//             skeleton={nodes.Sleeve.skeleton}
//           />
//           <primitive object={nodes.firstfold} />
//           <primitive object={nodes.firstsleeve} />
//         </group>
//         <group
//           name="ArmatureWallet"
//           position={[-7.081, 0.626, -1.709]}
//           rotation={[0, 0, -Math.PI / 2]}>
//           <skinnedMesh
//             name="BuisCard"
//             geometry={nodes.BuisCard.geometry}
//             material={materials.Buisness_Material}
//             skeleton={nodes.BuisCard.skeleton}
//           />
//           <skinnedMesh
//             ref={dlCardRef}
//             name="DL_Card"
//             geometry={nodes.DL_Card.geometry}
//             material={materials.DL_Material}
//             skeleton={nodes.DL_Card.skeleton}
//           >
//             {/* <animated.group position={position}>
//               <Html
//                 ref={dlHtmlRef}
//                 occlude
//                 transform
//                 distanceFactor={8}
//                 center
//                 style={{ pointerEvents: 'none' }}
//               >
//                 <DL_bio />
//               </Html>
//             </animated.group> */}
//           </skinnedMesh>

//           <skinnedMesh
//             name="DL_Face"
//             geometry={nodes.DL_Face.geometry}
//             material={materials.DL_Material}
//             skeleton={nodes.DL_Face.skeleton}
//           />
//           <group name="Wallet">
//             <skinnedMesh
//               name="Cube"
//               geometry={nodes.Cube.geometry}
//               material={materials.Wallet_Material}
//               skeleton={nodes.Cube.skeleton}
//             />
//             <skinnedMesh
//               name="Cube_1"
//               geometry={nodes.Cube_1.geometry}
//               material={materials.Sleeve_Material}
//               skeleton={nodes.Cube_1.skeleton}
//             />
//           </group>
//           <primitive object={nodes.walletstay} />
//           <primitive object={nodes.walletspine}>
//             <primitive object={nodes.walletopen}>
//                 <Html
//                     ref={dlHtmlRef}
//                     occlude
//                     wrapperClass="nodes"
//                     position={[2.4, 7, 0.7]}
//                     transform
//                     distanceFactor={8}
//                     // rotation-x={THREE.MathUtils.degToRad(90)}
//                     // rotation-y={THREE.MathUtils.degToRad(-90)}
//                     rotation-z={THREE.MathUtils.degToRad(-90)}
//                     style={{ pointerEvents: "none" }}
//                 >
//                     <DL_bio />
//                 </Html>
//             </primitive>
//           </primitive>

//         </group>
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/wallettestmask.glb')