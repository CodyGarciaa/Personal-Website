/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Wallet2(props) {
  const { nodes, materials } = useGLTF('/finishedwallet.glb')
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BuisCard.geometry}
        material={materials['dl card']}
        position={[-1.406, 3.075, -0.984]}
        rotation={[0, -0.022, 0]}
        scale={[5.751, 3.101, 0.445]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Proj1Card.geometry}
        material={materials['proj color']}
        position={[0.421, 3.084, -0.785]}
        rotation={[0, -0.026, 0]}
        scale={[5.751, 3.101, 0.445]}
      />
      <group position={[-0.01, 0, -0.758]}>
        <skinnedMesh
          geometry={nodes.Sleeve.geometry}
          material={materials.sleeve}
          skeleton={nodes.Sleeve.skeleton}
        />
        <primitive object={nodes.firstfold} />
        <primitive object={nodes.firstsleeve} />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.DL_Card.geometry}
        material={materials['dl card']}
        position={[0, 3.102, 0.381]}            //[x, z, y]
        rotation={[0, -0.022, 0]}
        scale={[5.751, 3.101, 0.445]}
      />
      <group position={[-7.081, 0.626, -1.709]} rotation={[0, 0, -Math.PI / 2]}>
        <primitive object={nodes.walletstay} />
        <primitive object={nodes.walletspine}>
            <primitive object={nodes.walletopen}/>
        </primitive>
        <skinnedMesh
          geometry={nodes.Cube.geometry}
          material={materials.Material}
          skeleton={nodes.Cube.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Cube_1.geometry}
          material={materials.cut}
          skeleton={nodes.Cube_1.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/finishedwallet.glb')